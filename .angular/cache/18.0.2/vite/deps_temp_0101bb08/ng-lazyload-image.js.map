{
  "version": 3,
  "sources": ["../../../../../node_modules/ng-lazyload-image/fesm2020/ng-lazyload-image.mjs"],
  "sourcesContent": ["import { Subject, of, Observable, ReplaySubject, never, empty } from 'rxjs';\nimport { filter, tap, take, mergeMap, map, catchError, switchMap, startWith, sampleTime, share } from 'rxjs/operators';\nimport { isPlatformServer } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, EventEmitter, PLATFORM_ID, Directive, Inject, Input, Output, NgModule } from '@angular/core';\nfunction getNavigator() {\n  return typeof window !== 'undefined' ? window.navigator : undefined;\n}\nfunction isChildOfPicture(element) {\n  return Boolean(element.parentElement && element.parentElement.nodeName.toLowerCase() === 'picture');\n}\nfunction isImageElement(element) {\n  return element.nodeName.toLowerCase() === 'img';\n}\nfunction setImage(element, imagePath, useSrcset) {\n  if (isImageElement(element)) {\n    if (useSrcset && 'srcset' in element) {\n      element.srcset = imagePath;\n    } else {\n      element.src = imagePath;\n    }\n  } else {\n    element.style.backgroundImage = `url('${imagePath}')`;\n  }\n  return element;\n}\nfunction setSources(attrName) {\n  return image => {\n    const sources = image.parentElement.getElementsByTagName('source');\n    for (let i = 0; i < sources.length; i++) {\n      const attrValue = sources[i].getAttribute(attrName);\n      if (attrValue) {\n        // Check if `srcset` is supported by the current browser\n        if ('srcset' in sources[i]) {\n          sources[i].srcset = attrValue;\n        } else {\n          sources[i].src = attrValue;\n        }\n      }\n    }\n  };\n}\nconst setSourcesToDefault = setSources('defaultImage');\nconst setSourcesToLazy = setSources('lazyLoad');\nconst setSourcesToError = setSources('errorImage');\nfunction setImageAndSources(setSourcesFn) {\n  return (element, imagePath, useSrcset) => {\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      setSourcesFn(element);\n    }\n    if (imagePath) {\n      setImage(element, imagePath, useSrcset);\n    }\n  };\n}\nconst setImageAndSourcesToDefault = setImageAndSources(setSourcesToDefault);\nconst setImageAndSourcesToLazy = setImageAndSources(setSourcesToLazy);\nconst setImageAndSourcesToError = setImageAndSources(setSourcesToError);\nclass Hooks {\n  constructor() {\n    this.navigator = getNavigator();\n  }\n  setPlatformId(platformId) {\n    this.platformId = platformId;\n  }\n  onDestroy(attributes) {}\n  onAttributeChange(newAttributes) {}\n}\nconst cssClassNames = {\n  loaded: 'ng-lazyloaded',\n  loading: 'ng-lazyloading',\n  failed: 'ng-failed-lazyloaded'\n};\nfunction removeCssClassName(element, cssClassName) {\n  element.className = element.className.replace(cssClassName, '');\n}\nfunction addCssClassName(element, cssClassName) {\n  if (!element.className.includes(cssClassName)) {\n    element.className += ` ${cssClassName}`;\n  }\n}\nfunction hasCssClassName(element, cssClassName) {\n  return element.className && element.className.includes(cssClassName);\n}\nclass SharedHooks extends Hooks {\n  setup(attributes) {\n    setImageAndSourcesToDefault(attributes.element, attributes.defaultImagePath, attributes.useSrcset);\n    if (attributes.imagePath) {\n      addCssClassName(attributes.element, cssClassNames.loading);\n    }\n    if (hasCssClassName(attributes.element, cssClassNames.loaded)) {\n      removeCssClassName(attributes.element, cssClassNames.loaded);\n    }\n  }\n  finally(attributes) {\n    addCssClassName(attributes.element, cssClassNames.loaded);\n    removeCssClassName(attributes.element, cssClassNames.loading);\n  }\n  loadImage(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      // Set the image right away for bots for better SEO\n      return [attributes.imagePath];\n    }\n    const {\n      element,\n      useSrcset,\n      imagePath,\n      decode\n    } = attributes;\n    let img;\n    if (isImageElement(element) && isChildOfPicture(element)) {\n      const parentClone = element.parentNode.cloneNode(true);\n      img = parentClone.getElementsByTagName('img')[0];\n      setSourcesToLazy(img);\n      setImage(img, imagePath, useSrcset);\n    } else {\n      img = new Image();\n      if (isImageElement(element) && element.referrerPolicy) {\n        img.referrerPolicy = element.referrerPolicy;\n      }\n      if (isImageElement(element) && element.sizes) {\n        img.sizes = element.sizes;\n      }\n      if (useSrcset && 'srcset' in img) {\n        img.srcset = imagePath;\n      } else {\n        img.src = imagePath;\n      }\n    }\n    if (decode && img.decode) {\n      return img.decode().then(() => imagePath);\n    }\n    return new Promise((resolve, reject) => {\n      img.onload = () => resolve(imagePath);\n      img.onerror = () => reject(null);\n    });\n  }\n  setErrorImage(error, attributes) {\n    const {\n      element,\n      useSrcset,\n      errorImagePath\n    } = attributes;\n    setImageAndSourcesToError(element, errorImagePath, useSrcset);\n    addCssClassName(element, cssClassNames.failed);\n  }\n  setLoadedImage(imagePath, attributes) {\n    const {\n      element,\n      useSrcset\n    } = attributes;\n    setImageAndSourcesToLazy(element, imagePath, useSrcset);\n  }\n  isDisabled() {\n    // Disable if SSR and the user isn't a bot\n    return isPlatformServer(this.platformId) && !this.isBot();\n  }\n  skipLazyLoading(attributes) {\n    return this.isBot(attributes);\n  }\n  isBot(attributes) {\n    if (this.navigator?.userAgent) {\n      return /googlebot|bingbot|yandex|baiduspider|facebookexternalhit|twitterbot|rogerbot|linkedinbot|embedly|quora\\ link\\ preview|showyoubot|outbrain|pinterest\\/0\\.|pinterestbot|slackbot|vkShare|W3C_Validator|whatsapp|duckduckbot|prerender/i.test(this.navigator.userAgent);\n    }\n    return false;\n  }\n}\nclass IntersectionObserverHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n    this.observers = new WeakMap();\n    this.intersectionSubject = new Subject();\n    this.uniqKey = {};\n  }\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of({\n        isIntersecting: true\n      });\n    }\n    if (attributes.customObservable) {\n      return attributes.customObservable;\n    }\n    const scrollContainerKey = attributes.scrollContainer || this.uniqKey;\n    const options = {\n      root: attributes.scrollContainer || null\n    };\n    if (attributes.offset) {\n      options.rootMargin = `${attributes.offset}px`;\n    }\n    let observer = this.observers.get(scrollContainerKey);\n    if (!observer) {\n      observer = new IntersectionObserver(entrys => this.loadingCallback(entrys), options);\n      this.observers.set(scrollContainerKey, observer);\n    }\n    observer.observe(attributes.element);\n    return Observable.create(obs => {\n      const subscription = this.intersectionSubject.pipe(filter(entry => entry.target === attributes.element)).subscribe(obs);\n      return () => {\n        subscription.unsubscribe();\n        observer.unobserve(attributes.element);\n      };\n    });\n  }\n  isVisible(event) {\n    return event.isIntersecting;\n  }\n  loadingCallback(entrys) {\n    entrys.forEach(entry => this.intersectionSubject.next(entry));\n  }\n}\nfunction lazyLoadImage(hooks, attributes) {\n  return evntObservable => {\n    return evntObservable.pipe(tap(data => attributes.onStateChange.emit({\n      reason: 'observer-emit',\n      data\n    })), filter(event => hooks.isVisible(event, attributes)), take(1), tap(() => attributes.onStateChange.emit({\n      reason: 'start-loading'\n    })), mergeMap(() => hooks.loadImage(attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'mount-image'\n    })), tap(imagePath => hooks.setLoadedImage(imagePath, attributes)), tap(() => attributes.onStateChange.emit({\n      reason: 'loading-succeeded'\n    })), map(() => true), catchError(error => {\n      attributes.onStateChange.emit({\n        reason: 'loading-failed',\n        data: error\n      });\n      hooks.setErrorImage(error, attributes);\n      return of(false);\n    }), tap(() => {\n      attributes.onStateChange.emit({\n        reason: 'finally'\n      });\n      hooks.finally(attributes);\n    }));\n  };\n}\nconst LAZYLOAD_IMAGE_HOOKS = new InjectionToken('LazyLoadImageHooks');\nclass LazyLoadImageDirective {\n  constructor(el, ngZone, platformId, hooks) {\n    this.onStateChange = new EventEmitter(); // Emits an event on every state change\n    this.elementRef = el;\n    this.ngZone = ngZone;\n    this.propertyChanges$ = new ReplaySubject();\n    this.hooks = hooks;\n    this.hooks.setPlatformId(platformId);\n    this.uid = Math.random().toString(36).substr(2, 9);\n  }\n  ngOnChanges() {\n    if (this.debug === true && !this.debugSubscription) {\n      this.debugSubscription = this.onStateChange.subscribe(e => console.log(e));\n    }\n    this.propertyChanges$.next({\n      element: this.elementRef.nativeElement,\n      imagePath: this.lazyImage,\n      defaultImagePath: this.defaultImage,\n      errorImagePath: this.errorImage,\n      useSrcset: this.useSrcset,\n      offset: this.offset ? this.offset | 0 : 0,\n      scrollContainer: this.scrollTarget,\n      customObservable: this.customObservable,\n      decode: this.decode,\n      onStateChange: this.onStateChange,\n      id: this.uid\n    });\n  }\n  ngAfterContentInit() {\n    if (this.hooks.isDisabled()) {\n      return null;\n    }\n    this.ngZone.runOutsideAngular(() => {\n      this.loadSubscription = this.propertyChanges$.pipe(tap(attributes => this.hooks.onAttributeChange(attributes)), tap(attributes => attributes.onStateChange.emit({\n        reason: 'setup'\n      })), tap(attributes => this.hooks.setup(attributes)), switchMap(attributes => {\n        if (!attributes.imagePath) {\n          return never();\n        }\n        return this.hooks.getObservable(attributes).pipe(lazyLoadImage(this.hooks, attributes));\n      })).subscribe({\n        next: () => null\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.propertyChanges$.pipe(take(1)).subscribe({\n      next: attributes => this.hooks.onDestroy(attributes)\n    }).unsubscribe();\n    this.loadSubscription?.unsubscribe();\n    this.debugSubscription?.unsubscribe();\n  }\n}\nLazyLoadImageDirective.ɵfac = function LazyLoadImageDirective_Factory(t) {\n  return new (t || LazyLoadImageDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(LAZYLOAD_IMAGE_HOOKS));\n};\nLazyLoadImageDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: LazyLoadImageDirective,\n  selectors: [[\"\", \"lazyLoad\", \"\"]],\n  inputs: {\n    lazyImage: [0, \"lazyLoad\", \"lazyImage\"],\n    defaultImage: \"defaultImage\",\n    errorImage: \"errorImage\",\n    scrollTarget: \"scrollTarget\",\n    customObservable: \"customObservable\",\n    offset: \"offset\",\n    useSrcset: \"useSrcset\",\n    decode: \"decode\",\n    debug: \"debug\"\n  },\n  outputs: {\n    onStateChange: \"onStateChange\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[lazyLoad]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: Object,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: Hooks,\n      decorators: [{\n        type: Inject,\n        args: [LAZYLOAD_IMAGE_HOOKS]\n      }]\n    }];\n  }, {\n    lazyImage: [{\n      type: Input,\n      args: ['lazyLoad']\n    }],\n    defaultImage: [{\n      type: Input\n    }],\n    errorImage: [{\n      type: Input\n    }],\n    scrollTarget: [{\n      type: Input\n    }],\n    customObservable: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    useSrcset: [{\n      type: Input\n    }],\n    decode: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    onStateChange: [{\n      type: Output\n    }]\n  });\n})();\nclass LazyLoadImageModule {}\nLazyLoadImageModule.ɵfac = function LazyLoadImageModule_Factory(t) {\n  return new (t || LazyLoadImageModule)();\n};\nLazyLoadImageModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LazyLoadImageModule,\n  declarations: [LazyLoadImageDirective],\n  exports: [LazyLoadImageDirective]\n});\nLazyLoadImageModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [{\n    provide: LAZYLOAD_IMAGE_HOOKS,\n    useClass: IntersectionObserverHooks\n  }]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LazyLoadImageModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LazyLoadImageDirective],\n      exports: [LazyLoadImageDirective],\n      providers: [{\n        provide: LAZYLOAD_IMAGE_HOOKS,\n        useClass: IntersectionObserverHooks\n      }]\n    }]\n  }], null, null);\n})();\nclass Rect {\n  constructor(left, top, right, bottom) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n  static fromElement(element) {\n    const {\n      left,\n      top,\n      right,\n      bottom\n    } = element.getBoundingClientRect();\n    if (left === 0 && top === 0 && right === 0 && bottom === 0) {\n      return Rect.empty;\n    } else {\n      return new Rect(left, top, right, bottom);\n    }\n  }\n  static fromWindow(_window) {\n    return new Rect(0, 0, _window.innerWidth, _window.innerHeight);\n  }\n  inflate(inflateBy) {\n    this.left -= inflateBy;\n    this.top -= inflateBy;\n    this.right += inflateBy;\n    this.bottom += inflateBy;\n  }\n  intersectsWith(rect) {\n    return rect.left < this.right && this.left < rect.right && rect.top < this.bottom && this.top < rect.bottom;\n  }\n  getIntersectionWith(rect) {\n    const left = Math.max(this.left, rect.left);\n    const top = Math.max(this.top, rect.top);\n    const right = Math.min(this.right, rect.right);\n    const bottom = Math.min(this.bottom, rect.bottom);\n    if (right >= left && bottom >= top) {\n      return new Rect(left, top, right, bottom);\n    } else {\n      return Rect.empty;\n    }\n  }\n}\nRect.empty = new Rect(0, 0, 0, 0);\nclass ScrollHooks extends SharedHooks {\n  constructor() {\n    super(...arguments);\n    this.getWindow = () => window;\n    this.scrollListeners = new WeakMap();\n    // Only create one scroll listener per target and share the observable.\n    // Typical, there will only be one observable per application\n    this.getScrollListener = scrollTarget => {\n      if (!scrollTarget || typeof scrollTarget.addEventListener !== 'function') {\n        console.warn('`addEventListener` on ' + scrollTarget + ' (scrollTarget) is not a function. Skipping this target');\n        return empty();\n      }\n      const scrollListener = this.scrollListeners.get(scrollTarget);\n      if (scrollListener) {\n        return scrollListener;\n      }\n      const srollEvent = Observable.create(observer => {\n        const eventName = 'scroll';\n        const handler = event => observer.next(event);\n        const options = {\n          passive: true,\n          capture: false\n        };\n        scrollTarget.addEventListener(eventName, handler, options);\n        return () => scrollTarget.removeEventListener(eventName, handler, options);\n      });\n      const listener = this.sampleObservable(srollEvent);\n      this.scrollListeners.set(scrollTarget, listener);\n      return listener;\n    };\n  }\n  getObservable(attributes) {\n    if (this.skipLazyLoading(attributes)) {\n      return of('load');\n    } else if (attributes.customObservable) {\n      return attributes.customObservable.pipe(startWith(''));\n    } else if (attributes.scrollContainer) {\n      return this.getScrollListener(attributes.scrollContainer);\n    }\n    return this.getScrollListener(this.getWindow());\n  }\n  isVisible(event, attributes) {\n    const elementBounds = Rect.fromElement(attributes.element);\n    if (elementBounds === Rect.empty) {\n      return false;\n    }\n    const windowBounds = Rect.fromWindow(this.getWindow());\n    elementBounds.inflate(attributes.offset);\n    if (attributes.scrollContainer) {\n      const scrollContainerBounds = Rect.fromElement(attributes.scrollContainer);\n      const intersection = scrollContainerBounds.getIntersectionWith(windowBounds);\n      return elementBounds.intersectsWith(intersection);\n    } else {\n      return elementBounds.intersectsWith(windowBounds);\n    }\n  }\n  sampleObservable(obs, scheduler) {\n    return obs.pipe(sampleTime(100, scheduler), share(), startWith(''));\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Hooks, IntersectionObserverHooks, LAZYLOAD_IMAGE_HOOKS, LazyLoadImageDirective, LazyLoadImageModule, ScrollHooks, SharedHooks };\n"],
  "mappings": "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",
  "names": []
}
